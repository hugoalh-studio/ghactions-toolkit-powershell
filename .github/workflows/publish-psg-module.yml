# $<Schema>$ https://docs.github.com/en/actions/reference/workflow-syntax-for-github-actions
name: "Publish - PowerShell Gallery - Module"
on:
  release:
    types:
      - "published"
  workflow_dispatch:
jobs:
  publish-psg-module:
    name: "Publish - PowerShell Gallery - Module"
    runs-on: "windows-latest"
    steps:
      - name: "Checkout Repository"
        uses: "actions/checkout@v2.4.0"
      - name: "Modify PowerShell Gallery Installation Policy"
        id: "psgip"
        run: |
          Write-Host -Object "::set-output name=installationpolicy::$((Get-PSRepository -Name PSGallery).InstallationPolicy)"
          Set-PSRepository -Name PSGallery -InstallationPolicy Trusted
        shell: "pwsh"
      - name: "Setup PowerShellGet"
        run: |
          if (Get-InstalledModule -Name PowerShellGet -MinimumVersion 2.2.5 -ErrorAction SilentlyContinue) {} else {
            Install-Module -AcceptLicense -Name PowerShellGet -Scope AllUsers -Verbose
          }
        shell: "pwsh"
      - name: "Update PowerShell Modules"
        run: |
          Update-Module -AcceptLicense -Scope AllUsers -Verbose
        shell: "pwsh"
      - name: "Test Publish"
        run: |
          Publish-Module -Path .\hugoalh.GitHubActionsToolkit\ -NugetAPIKey 'GUID' -WhatIf -Verbose
        shell: "pwsh"
      - name: "Publish"
        run: |
          Publish-Module -Path .\hugoalh.GitHubActionsToolkit\ -NugetAPIKey '${{secrets.POWERSHELLGALLERY_TOKEN}}' -Verbose
        shell: "pwsh"
      - name: "Revert Modify PowerShell Gallery Installation Policy"
        if: "${{steps.psgip.outcome == 'success' && always()}}"
        run: |
          Set-PSRepository -Name PSGallery -InstallationPolicy '${{steps.psgip.outputs.installationpolicy}}'
        shell: "pwsh"
